{"version":3,"sources":["webpack://Dumb-Projects/./src/components/basic/href/index.js","webpack://Dumb-Projects/./src/images/gatsby-bludit.png","webpack://Dumb-Projects/./src/components/layout/bludit/wrap/index.js","webpack://Dumb-Projects/./src/components/layout/bludit/page/index.js","webpack://Dumb-Projects/./src/components/basic/bludit/card/index.js","webpack://Dumb-Projects/./src/pages/bludit/index.js"],"names":["children","url","link","alt","newTab","className","to","href","target","rel","Helmet","name","content","property","logo","sizes","appleicon57x57","appleicon60x60","appleicon72x72","appleicon76x76","appleicon114x114","appleicon120x120","appleicon144x144","appleicon152x152","appleicon180x180","type","androidicon192x192","favicon32x32","favicon96x96","favicon16x16","msicon144x144","title","linkTitle","social","Tag","tag","image","tags","src","split","map","index","key","toLowerCase","replace","data","allBludit","edges","node","coverImage","substring","permalink"],"mappings":"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","file":"component---src-pages-bludit-index-js-854046dbf5c8f91b662c.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Href = ({ children, url, link, alt, newTab = true, className }) => {\n  if (link) {\n    return <Link to={link}>{children}</Link>;\n  } else {\n    return newTab ? (\n      <a\n        href={url}\n        className={className}\n        alt={alt}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {children}\n      </a>\n    ) : (\n      <a href={url} className={className} alt={alt}>\n        {children}\n      </a>\n    );\n  }\n};\n\nexport default Href;\n","export default __webpack_public_path__ + \"static/gatsby-bludit-8391d5007c48914198cdddb8afaa38f6.png\";","import React from \"react\";\nimport Helmet from \"react-helmet\";\n\nimport logo from \"/src/images/gatsby-bludit.png\";\nimport appleicon57x57 from \"/src/images/favicon/apple-icon-57x57.png\";\nimport appleicon60x60 from \"/src/images/favicon/apple-icon-60x60.png\";\nimport appleicon72x72 from \"/src/images/favicon/apple-icon-72x72.png\";\nimport appleicon76x76 from \"/src/images/favicon/apple-icon-76x76.png\";\nimport appleicon114x114 from \"/src/images/favicon/apple-icon-114x114.png\";\nimport appleicon120x120 from \"/src/images/favicon/apple-icon-120x120.png\";\nimport appleicon144x144 from \"/src/images/favicon/apple-icon-144x144.png\";\nimport appleicon152x152 from \"/src/images/favicon/apple-icon-152x152.png\";\nimport appleicon180x180 from \"/src/images/favicon/apple-icon-180x180.png\";\nimport androidicon192x192 from \"/src/images/favicon/android-icon-192x192.png\";\nimport favicon32x32 from \"/src/images/favicon/favicon-32x32.png\";\nimport favicon96x96 from \"/src/images/favicon/favicon-96x96.png\";\nimport favicon16x16 from \"/src/images/favicon/favicon-16x16.png\";\nimport msicon144x144 from \"/src/images/favicon/ms-icon-144x144.png\";\n\nimport \"/src/styles/global.css\";\n\nconst Wrap = ({ children }) => {\n  return (\n    <>\n      <Helmet>\n        <title>Bludit Source Plugin for Gatsby Demo</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta\n          name=\"description\"\n          content=\"Bludit Source Plugin for Gatsby Demo\"\n        />\n        <meta\n          property=\"og:title\"\n          content=\"Bludit Source Plugin for Gatsby Demo\"\n        />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta\n          property=\"og:description\"\n          content=\"Bludit Source Plugin for Gatsby Demo\"\n        />\n        <meta property=\"og:url\" content=\"https://dumbprojects.com/bludit\" />\n        <meta property=\"og:image\" content={`https://dumbprojects.com${logo}`} />\n        <meta property=\"og:site_name\" content=\"dumbprojects.com\" />\n        <link rel=\"apple-touch-icon\" sizes=\"57x57\" href={appleicon57x57} />\n        <link rel=\"apple-touch-icon\" sizes=\"60x60\" href={appleicon60x60} />\n        <link rel=\"apple-touch-icon\" sizes=\"72x72\" href={appleicon72x72} />\n        <link rel=\"apple-touch-icon\" sizes=\"76x76\" href={appleicon76x76} />\n        <link rel=\"apple-touch-icon\" sizes=\"114x114\" href={appleicon114x114} />\n        <link rel=\"apple-touch-icon\" sizes=\"120x120\" href={appleicon120x120} />\n        <link rel=\"apple-touch-icon\" sizes=\"144x144\" href={appleicon144x144} />\n        <link rel=\"apple-touch-icon\" sizes=\"152x152\" href={appleicon152x152} />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={appleicon180x180} />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"192x192\"\n          href={androidicon192x192}\n        />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={favicon32x32} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href={favicon96x96} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={favicon16x16} />\n        <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n        <meta name=\"msapplication-TileImage\" content={msicon144x144} />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        <meta\n          name=\"twitter:image\"\n          content={`https://dumbprojects.com${logo}`}\n        />\n      </Helmet>\n      {children}\n    </>\n  );\n};\n\nexport default Wrap;\n","import React from \"react\";\nimport Href from \"../../../basic/href\";\n\nconst Page = ({ children, title, url, link, linkTitle, newTab, social = true }) => (\n  <div>\n    {title && (\n      <div className=\"text-3xl mb-14 md:mb-10 mt-10 md:mt-0 text-center md:text-left\">\n        {title}\n        <Href url={url} link={link} newTab={newTab} className=\"md:hover:underline\">\n          {linkTitle}\n        </Href>\n        .\n      </div>\n    )}\n    <div className=\"flex flex-wrap justify-evenly\">{children}</div>\n  </div>\n);\n\nexport default Page;\n","import React from \"react\";\nimport Href from \"../../href\";\n\nconst Tag = ({ tag, url, newTab }) => (\n  <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 md:hover:underline\">\n    <Href url={url} newTab={newTab}>\n      {tag}\n    </Href>\n  </span>\n);\n\nconst Card = ({ title, image, content, url, link, tags, newTab }) => (\n  <Href url={url} link={link} newTab={newTab}>\n    <div className=\"max-w-sm mx-5 md:mx-2 rounded overflow-hidden shadow-lg mb-10 md:mb-16 md:transition md:transform md:hover:scale-105\">\n      <Href url={url} newTab={newTab}>\n        {typeof image !== \"object\" ? (\n          <img src={image} alt={title} className=\"w-full\" />\n        ) : (\n          image\n        )}\n      </Href>\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-xl mb-2 hover:underline\">{title}</div>\n        {content && <p className=\"text-gray-700 text-base ml-0 mb-0\">{content}</p>}\n      </div>\n      {tags && (\n        <div className=\"px-6 py-4\">\n          {tags.split(\",\").map((tag, index) => (\n            <Tag\n              key={index}\n              tag={`#${tag.toLowerCase()}`}\n              url={`https://pilab.dev/tag/${tag\n                .toLowerCase()\n                .replace(\" \", \"-\")}`}\n              newTab={true}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  </Href>\n);\n\nexport default Card;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Wrap from \"../../components/layout/bludit/wrap\";\nimport Page from \"../../components/layout/bludit/page\";\nimport Card from \"../../components/basic/bludit/card\";\n\nconst Bludit = ({ data }) => (\n  <Wrap>\n    <Page\n      title=\"Latest Posts from \"\n      url=\"https://pilab.dev\"\n      linkTitle=\"Pi Lab\"\n      alt=\"Pi Lab\"\n    >\n      {data.allBludit.edges.map(({ node }) => {\n        return (\n            <Card\n                key={node.title}\n                title={node.title}\n                image={node.coverImage}\n                content={`${node.content.replace(/<\\/?[^>]+(>|$)/g, \"\").substring(0,100)}...`}\n                url={node.permalink}\n                tags={node.tags}\n            />\n        );\n      })}\n    </Page>\n  </Wrap>\n);\n\nexport const query = graphql`\n  {\n    allBludit(limit: 8) {\n      edges {\n        node {\n          id\n          title\n          coverImage\n          permalink\n          content\n          tags\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default Bludit;\n"],"sourceRoot":""}