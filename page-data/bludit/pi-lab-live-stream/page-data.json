{"componentChunkName":"component---src-templates-post-js","path":"/bludit/pi-lab-live-stream","result":{"data":{"allBludit":{"edges":[{"node":{"title":"Pi Lab Live Stream","content":"<p><strong>Checkout out the live stream of Pi Lab!</strong></p>\n<div class=\"centered\">\n    <div style=\"display:none;\">This live stream is utilizing a re-purposed AT&T Digital Life security camera. There is really no practical purpose for this. I just thought it would be a fun way to use left over tech. I have also updated the [Specs](/specs) page to use this stream so that you can always see the latest state of Pi Lab. \n    </div>\n    <!-- <img id=\"liveStream\" src=\"https://pilab.dev/live-stream\" class=\"image-border\" style=\"margin-bottom:15px;\" /> -->\n        <!--<iframe class=\"iframe-border\" style=\"margin-bottom:15px;\" width=\"100%\" height=\"600\" src=\"https://www.youtube.com/embed/afzqbXH37Og?controls=0&autoplay=1&rel=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>-->\n        <div class=\"iframe-container\" style=\"margin-bottom:25px;\">\n            <div id=\"player\"></div>\n        </div>\n        <script>\n        var tag = document.createElement('script');\n\n        tag.src = \"https://www.youtube.com/iframe_api\";\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n        var player;\n        function onYouTubeIframeAPIReady() {\n            player = new YT.Player('player', {\n                width: '100%',\n                videoId: 'y6iLe6yeAQA',\n                playerVars: { 'autoplay': 1, 'playsinline': 1, 'rel': 0 },\n                events: {\n                    'onReady': onPlayerReady\n                }\n            });\n        }\n\n        function onPlayerReady(event) {\n             event.target.mute();\n            event.target.playVideo();\n        }\n    </script>\n</div>\n<p>This live stream is utilizing a re-purposed AT&amp;T Digital Life security camera. There is really no practical purpose for this. I just thought it would be a fun way to use left over tech. I have also updated the <a href=\"/specs\">Specs</a> page to use this stream so that you can always see the latest state of Pi Lab.</p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>After a <a href=\"https://www.reddit.com/r/raspberry_pi/comments/gwbqyq/the_latest_pi_lab_setup/?utm_source=share&amp;utm_medium=web2x\">Reddit post</a> received a lot of attention I noticed that the Pi Lab Load Balancer Node was getting huge spikes in CPU usage. Eventually with help from a friend I was able to figure out that the issue was the Live Stream. The process of pushing the Live Stream through SSL was the issue. This also caused huge spikes in my network's bandwidth. </em></p>\n<p><del><em>I have updated the Pi Lab Live Stream to a snapshot model. So when the stream is loaded it is a JPEG at that moment in time. The snapshot is updated once a minute. This should reduce both CPU usage and network bandwidth while still providing a &quot;stream&quot; of the latest Pi Lab setup.</em></del></p>\n<p><em>I have updated the Live Stream to use <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a> to push the stream live to <a href=\"https://www.youtube.com/channel/UCKhoDT8RPKPNUI-a1D2BRuA\">YouTube</a>. -- <a href=\"restreamer\">More details...</a></em></p>\n</blockquote>\n<!-- <script>\n            function startStream() {\n                setInterval(updateStream, 60 * 1000);\n            }\n            function updateStream() {\n                document.getElementById('liveStream').src='https://pilab.dev/live-stream?i=' + Math.floor(Math.random() * 1001);\n            }\n            startStream();\n</script> -->"}}]}},"pageContext":{"slug":"pi-lab-live-stream"}},"staticQueryHashes":[]}