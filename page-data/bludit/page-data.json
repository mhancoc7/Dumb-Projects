{"componentChunkName":"component---src-pages-bludit-index-js","path":"/bludit/","result":{"data":{"allBludit":{"edges":[{"node":{"id":"6dd8cd25-9f1a-5786-807e-9ded1677d690","title":"Gatsby + Bludit","coverImage":"https://pilab.dev/bl-content/uploads/pages/a8ba2bb7e4c479cba0ff43de0c29f940/gatsby-bludit.png","permalink":"https://pilab.dev/gatsby-bludit","content":"<p>Introducing the new <strong><code>gatsby-source-bludit</code></strong> npm package for <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>!</p>\n<p><a href=\"https://www.gatsbyjs.com/\">Gatsby</a>, is an open-source static website generator (SSG) that is based on the frontend development framework React and makes use of Webpack and GraphQL technology. It can be used to build static sites that are progressive web apps, follow the latest web standards, and optimized for speed and security.</p>\n<p>One of the really cool things about <a href=\"https://www.gatsbyjs.com/\">Gatsby</a> is the ability to utilize external APIs to pull in data. To allow this for <a href=\"https://bludit.com\">Bludit</a> I have created a new &quot;source&quot; plugin to allow anyone to easily pull in content from their <a href=\"https://bludit.com\">Bludit</a> site with ease.</p>\n<p>This requires the use of the <a href=\"https://docs.bludit.com/en/api/introduction\">Bludit API</a> to be activated.</p>\n<p>Hopefully this will be helpful to someone looking to leverage the power of Gatsby and Bludit.</p>\n<p><a href=\"https://github.com/mhancoc7/gatsby-source-bludit/blob/main/LICENSE\"><img src=\"https://img.shields.io/github/license/mhancoc7/gatsby-source-bludit?color=orange&amp;style=for-the-badge\" alt=\"GitHub license\" /></a>\n<a href=\"https://dumbprojects.com/bludit/\"><img src=\"https://img.shields.io/badge/Gatsby%20%2B%20Bludit-Demo-green?style=for-the-badge\" alt=\"demo\" /></a>\n<a href=\"https://www.npmjs.com/package/gatsby-source-bludit\"><img src=\"https://img.shields.io/npm/v/gatsby-source-bludit?label=NPM%20PACKAGE&amp;style=for-the-badge\" alt=\"npm\" /></a>\n<a href=\"https://www.gatsbyjs.com/\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=GATSBY&amp;color=blueviolet&amp;style=for-the-badge\" alt=\"gatsby\" /></a>\n<a href=\"https://www.bludit.com\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=BLUDIT&amp;color=black&amp;style=for-the-badge\" alt=\"bludit\" /></a></p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have made some improvements to the demo. It now has a much cleaner design and pulls more data including tags and a portion of the post content into the&quot;preview&quot; cards..</em></p>\n</blockquote>","tags":"Bludit,Gatsby","slug":"gatsby-bludit"}},{"node":{"id":"d5741be6-0f3a-5352-a54f-acfc89141c24","title":"OctoPrint Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint.png","permalink":"https://pilab.dev/octoprint-node","content":"<p>My wife and kids got me a new 3D printer for my Birthday! I have been wanting one for quite some time. It is an <a href=\"https://creality3d.shop/collections/3d-printer/products/creality3d-ender-3-pro-high-precision-3d-printer\">Ender 3 Pro</a>. I am really just getting into using it but one of the first things I was told to do was check out <a href=\"https://octoprint.org/\">OctoPrint</a>. </p>\n<blockquote>\n<p>So what is OctoPrint?</p>\n</blockquote>\n<p>It is described as <em>&quot;The snappy web interface for your 3D printer.&quot;</em>.  That doesn't begin to explain how great I think it is. It definitely does provide a web interface for your 3D printer, but it does so much more. It also provides the ability to run manual commands and even select from a very nice selection of plugins for a variety of tasks. It truly made a nice 3D printer a much more enjoyable piece of equipment.</p>\n<p>I have re-purposed my <a href=\"pi-lab-monitor-node\">Monitor Node</a> into my new OctoPi Node. </p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint-node.png\" class=\"image-border\" /><br><br>\n</div>\n<p>So far I have mostly printed <a href=\"http://www.3dbenchy.com/\">3DBenchies</a> trying to really get my print quality dialed in. I have one functional print under my belt that I am very happy with. I have had issues with my Roomba getting stuck under our coach. So I went looking on <a href=\"https://www.thingiverse.com\">Thingverse</a> and I found this <a href=\"https://www.thingiverse.com/thing:1756175\">Bumper Extension for Roomba</a>. It was for a different model and I had to do some scaling to make it large enough to keep my Roomba from going under the couch. So far it is working great!</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/roomba-mod.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I have added a new <a href=\"category/3d-printing\">3D Printing</a> category to the blog and I hope to be posting many more prints very soon.</p>","tags":"Raspberry Pi,Pi,3D Printing","slug":"octoprint-node"}},{"node":{"id":"52b9b653-dbad-59c4-b6ae-260523011522","title":"Roadside America","coverImage":"https://pilab.dev/bl-content/uploads/pages/autosave-6968c1c0dfc10df31f7685952c0cf488/roadside-america.png","permalink":"https://pilab.dev/roadside-america","content":"<p>A little over a year ago I saw a Reddit post about the <a href=\"https://www.loc.gov/free-to-use/john-margolies-roadside-america-photograph-archive\">John Margolies Roadside America Photograph Archive</a>. The photos were taken between 1968 and 2008 and feature various roadside attractions in the United States. </p>\n<p>My first thought was I should build some sort of API to allow someone to easily use these photos on a website. So I built out a very simple API of sorts and set it up here, <a href=\"https://roadside-america.dumbprojects.com/\">Roadside America API</a>.</p>\n<p>I started tweeting the pictures on my personal Twitter account and people seemed to like them. So I have setup a Roadside America Twitter account and new site to allow people to get a random picture from the archive wiith its description every hour.</p>\n<p>Check it out here:</p>\n<p><a href=\"https://twitter.com/RdSd_America_US\">@RdSd_America_US</a> &amp; <a href=\"https://roadsideamerica.us/\">RoadsideAmerica.us</a></p>","tags":"Roadside America,Twitter","slug":"roadside-america"}},{"node":{"id":"f53c3be3-68f0-512d-a820-eb0fc1e147df","title":"Restreamer Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/241c4852179f57be27536866df35d4ae/restreamer-icon.png","permalink":"https://pilab.dev/restreamer","content":"<p>Recently I have been working on setting up a live stream for my son's pet Leopard Gecko. We originally set it up a year or so ago using an old Android phone using <a href=\"https://www.youtube.com/live\">YouTube live streaming</a>. However, YouTube changed the requirements for this method. They now require that your channel has over 1000 subscribers. After that change we attempted to use <a href=\"https://play.google.com/store/apps/details?id=com.pas.webcam.pro&amp;hl=en_US\">IP Web Cam Pro</a> also on an old Android phone. This worked pretty well, however, the phone's battery would die after a few hours even though it was plugged in.</p>\n<p>I finally decided to purchase some low end IP cameras and give those a shot. I found a two pack of <a href=\"https://www.amazon.com/Wyze-Indoor-Wireless-Camera-Vision/dp/B07G2YR23M/\">Wyze Cams</a>. I was hoping that they would have the ability to view the steam via a browser on my local network. I could then simply setup a reverse proxy on the Pi Lab load balancer and share it. Unfortunately that was not the case. </p>\n<p>After some research I found that <a href=\"https://wyze.com/\">Wyze</a> has a <a href=\"https://support.wyzecam.com/hc/en-us/articles/360026245231-Wyze-Cam-RTSP\">beta firmware</a> that provides the ability to stream via RTSP. The installation is fairly straight forward. Simply have to copy a file to an SD card and follow a few steps. This gives an extra advanced option to create an RTSP URL to allow streaming outside the app.</p>\n<p>Now that I had that I needed a way to use that stream to embed the streams on a website which was the original goal for my son's Gecko stream.</p>\n<p>This is where the new Pi Lab Restreamer Node comes in. I have setup a Raspberry Pi 4 Model B 2GB with <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>. Restreamer is a software which allows for free real-time video streaming, e.g. transferring video signals of webcams or other video-inputs directly to your website. </p>\n<p>The setup for this was so easy! It allowed me to setup local stream URLs that I can use with a reverse proxy entry on the Pi Lab Load Balancer. It also allows me to easily push the streams to <a href=\"https://www.youtube.com/\">YouTube</a> which is what I have elected to do. </p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/241c4852179f57be27536866df35d4ae/restreamer.png\" class=\"image-border\" /><br><br>\n</div>\n<p><strong>Here are the streams that we have setup so far.</strong></p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=hn_3fYmSo0A\">Pi Lab Live Stream</a></li>\n<li><a href=\"https://tortoisecam.com\">Tortoise Cam (Russian Tortoise)</a></li>\n</ul>\n<p>So far things are working very well. I have all the streams setup to not do any additional encoding in <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>. I found that this was not very helpful with my lower end cameras and was only causing high CPU usage. I am seeing about 3-4 Mbps upload usage on my network which I am going to keep a close eye on.</p>\n<p>The main issue that I have had is with <a href=\"https://www.youtube.com/\">YouTube</a> stopping the streams after 12 hours. This is mainly frustrating because it breaks the embed codes for the streams since the stream URL will change when I re-establish the stream. It is even odder that the <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> hasn't stopped after over 2 days of streaming, but the others stop everyday right at 12 hours. I am not sure if the AT&amp;T Digital Life security camera that is used for the <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> somehow has an affect. </p>\n<p>If you are looking to get into running a live stream for something like a pet definitely take a look at <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>!</p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have managed to get the <a href=\"https://www.youtube.com/\">YouTube</a> live streams to not stop after 12 hours. Apparently if you use the &quot;Schedule Stream&quot; option it allows you to stream past the 12 hour mark. The <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> was setup this way during the initial setup which is why it hadn't stopped. I have now set them all up this way.</em></p>\n<p><em>I have updated my tortoise cam with its own URL, <a href=\"https://tortoisecam.com\">TortoiseCam.com</a>. <del>It is setup to use <a href=\"https://www.earthcam.com/\">EarthCam</a> which it turns out <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a> also works with.</del></em></p>\n<p><em>I have updated the <a href=\"https://tortoisecam.com\">TortoiseCam.com</a> site to use <a href=\"https://www.youtube.com/\">YouTube</a> since I noticed <a href=\"https://www.earthcam.com/\">EarthCam</a> uses ugly ads that seemed sketchy.</em></p>\n<p><em>I have continued to have issues with <a href=\"https://www.youtube.com/\">YouTube</a> ending the tortoise cam stream. So I have gone back to <a href=\"https://www.earthcam.com/\">EarthCam</a>. To get around the sketchy ads in the <a href=\"https://www.earthcam.com/\">EarthCam</a> embed I have setup a scraper to grab the m3u8 file directly for <a href=\"https://tortoisecam.com\">TortoiseCam.com</a>.</em></p>\n</blockquote>","tags":"Raspberry Pi,Pi,Restreamer","slug":"restreamer"}},{"node":{"id":"a2a2c325-8406-59cf-8654-61e100c77c31","title":"Pi Lab Monitor Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/afc7a527f2b1d3dac643a3a2567b279f/pi-lab-monitor.png","permalink":"https://pilab.dev/pi-lab-monitor-node","content":"<p>I have added a new node to Pi Lab to provide a screen. I have it setup to cycle through the <a href=\"https://grafana.com/\">Grafana</a> interface from the <a href=\"prometheus-grafana\">Prometheus Node</a>.</p>\n<p>I had an older <a href=\"https://wiki.52pi.com/index.php/5-Inch-800x480-HDMI-GPIO-Touch-Screen_SKU:EP-0072\">LCD screen</a> that I bought several years ago. I haven't been able to get the touch screen working yet, but not sure I really need it.</p>\n<h3>Check it out!</h3>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/afc7a527f2b1d3dac643a3a2567b279f/pi-lab-monitor-large.png\" class=\"image-border\" /><br><br>\n</div>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I started having issues with the resolution of the LCD screen.  I have updated the screen to an old 22 inch Dell monitor. </em></p>\n<p><em>I have re-purposed the Monitor Node into the <a href=\"octoprint-node\">OctoPrint Node</a>. I now have my dashbard displayed using my Plex Node. </em></p>\n</blockquote>","tags":"Raspberry Pi,Pi","slug":"pi-lab-monitor-node"}},{"node":{"id":"cfce9362-b594-550b-8c4b-5b15a9b7dc90","title":"New Pi Lab Media Nodes","coverImage":"https://pilab.dev/bl-content/uploads/pages/63d64ed2633a1938cd79e877208f471f/media-drive.png","permalink":"https://pilab.dev/new-pi-lab-media-nodes","content":"<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/63d64ed2633a1938cd79e877208f471f/media-nodes-stacked.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I was recently going through a box of old tech that I have held on to over the years. I am across two <a href=\"https://www.amazon.com/SanDisk-Wireless-Smartphones-Tablets-SDWS1-032G-A57/dp/B00DR8LBAK\">SanDisk Media Drives</a> that I purchased for next to nothing on a clearance aisle at Target many years back. I had previously used these for their intended purpose. While traveling I would set them up with movies so we could watch when we otherwise didn't have easy access to streaming. Like I said I have had them for a while.</p>\n<p>I have always wondered if I could use them for something more. So I plugged them in and got to looking. I quickly realized that I could access the files via the device's IP address. This meant that I could easily setup a reverse proxy using the Pi Lab load balancer to serve the content on these devices outside my local network. </p>\n<p>As I began to look more closely at the devices I found a few snags. First off the FTP access to the devices was completely open. So anyone on my network could anonymously FTP into the device and have full read/write access to the files that I would be serving. The devices also had a web interface that allowed that same level of access.</p>\n<p>After some digging I found a few posts online that discussed these very issues. As it turns out the devices run an embedded Linux OS. They do not provide <code>SSH</code> access, but they do provide <code>telnet</code> access. Which gave me enough access to get started. I was able to find the <code>root</code> password on one of the forum posts. The person who posted it had used <a href=\"https://www.openwall.com/john/\">John the Ripper</a> password cracker to crack the password. </p>\n<p>Now I was able to update the <code>root</code> password and gain write access to the entire device. I was able to track down the needed changes to not allow anonymous FTP access and I completely removed the web interface as I will not be using it. I also made backups of all the files used when setting up the WiFi creds for the devices. That way in the future I will not even need to use the SanDisk app for setting that up.</p>\n<p>I added 32GB SD cards to each device which gives me 64GBs on each drive. One really cool thing is these devices can actually host static HTML/JS sites. That is what the web interface was using.</p>\n<p>I have setup a GitHub repo to document the steps I took to set things up. Check it out <a href=\"https://github.com/mhancoc7/sandisk-media-drive-32gb-mods\">here</a>.</p>\n<p>I am not sure what I plan to use them for, but I have setup a simple &quot;application&quot; that I think is fun. I have another project called the <a href=\"https://roadside-america.dumbprojects.com/\">Roadside America API</a>. It provides a simple API to retrieve images and metadata from the <a href=\"https://www.loc.gov/free-to-use/john-margolies-roadside-america-photograph-archive\">John Margolies Roadside America Photograph Archive</a>. </p>\n<p>I used the API to download all of the images to one of the media drives. Then I setup a webpage that redirects to a random image from the collection.</p>\n<h3>Usage</h3>\n<pre><code>https://pilab.dev/roadside-america-collection?size=large</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=medium</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=small</code></pre>\n<h3>Try it: <a href=\"https://pilab.dev/roadside-america-collection\" target=\"_blank\">Click Here</a></h3>\n<hr />\n<p><strong><em>Note:</em></strong> <em>If you don't provide a size, it will default to large.</em></p>","tags":"SanDisk","slug":"new-pi-lab-media-nodes"}},{"node":{"id":"319e4b65-3d1a-5863-90ae-1909f0440b50","title":"Node-Red Twitter Bot","coverImage":"https://pilab.dev/bl-content/uploads/pages/b3c9f34aa0cb8225b2ce75d480025d36/node-red-logo-2.png","permalink":"https://pilab.dev/node-red-twitter-bot","content":"<p>I have setup a new <a href=\"https://nodered.org/\">Node-Red</a> Twitter Bot. This is powered by a <a href=\"https://deviwiki.com/wiki/RPF_Raspberry_Pi_4_Model_B_2GB\">Raspberry Pi 4 Model B (2GB)</a> that I have setup as the new Pi Lab Node Red Node.</p>\n<p>The <a href=\"https://nodered.org/\">Node-Red</a> flow was originally setup to provide a URL endpoint that accepts a minimal number of query parameters (e.g. hostname). The flow would then make http requests to the <a href=\"prometheus-grafana\">Pi Lab Metric's Node</a> that is powered by <a href=\"https://prometheus.io/\">Prometheus</a> to retrieve the metrics. The metrics were then formatted and pushed directly to the <a href=\"https://twitter.com/pilabdev\">Pi Lab Twitter feed</a>.</p>\n<p>I am now on version 4 of the flow. The latest iteration is completely self contained inside <a href=\"https://nodered.org/\">Node-Red</a>. The flow runs every 30 minutes and does <code>ping</code> checks to ensure that the nodes are online before gathering the metrics for each node and sending out tweets. This allows me to reduce the overhead for each of the nodes in the Pi Lab cluster and have things more centralized. </p>\n<p>I have also added an SMS alert node that, after a failed <code>ping</code> check,  sends an email that is then forwarded via text message to my mobile phone using this <a href=\"https://www.att.com/support/article/wireless/KM1061254/\">AT&amp;T feature</a>.</p>\n<p>Below is a screenshot of the flow.</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b3c9f34aa0cb8225b2ce75d480025d36/pi-lab-node-red-twitter-bot-v6.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I am very impressed with <a href=\"https://nodered.org/\">Node-Red</a>. I definitely recommend it for anyone who enjoys coding and automation.</p>\n<p><a href=\"https://github.com/node-red\"><img data-src=\"/images/check-it-out-on-github.png\" alt=\"Get it on GitHub\" class=\"on-github lozad\" /></a></p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>Thanks to some great feedback from <a href=\"https://www.reddit.com/r/nodered/comments/hetcu6/my_first_nodered_flow/\">r/nodered</a> I have re-factored the flow to use the <code>join</code> node so I can remove the use of flow variables. This should fix the issues I was seeing when a request to the flow would occur before the previous request had completed.  </em></p>\n<p><em>I have added a new flow that tweets the current BOINC Node Rosetta@home stats. This flow is setup to be completely powered by <a href=\"https://nodered.org/\">Node-Red</a> and is run on a 30 minute interval.</em></p>\n<p><em>I have updated this blog post with the latest information on this project.</em></p>\n<p><em>I have added Node CPU temperature checks to alert me if a node has exceeded a configurable threshold.</em></p>\n<p><em>I have added a new flow that tweets the current average web stats from the <a href=\"https://statcounter.com/p12007932/summary/?account_id=324824&amp;login_id=1&amp;code=8be480ebcbd8fbe290785aac26c3ab68&amp;guest_login=1\">Pi Lab Statcounter account</a>.</em></p>\n<p><em>I have updated the flow to have better formatting of the message payload.</em></p>\n<p><em>I have added a new flow that tweets a JPEG snapshot of the <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> every 30 minutes.</em></p>\n<p><em>I have added a Current Date/Time node to ensure that the Tweets are unique.</em></p>\n</blockquote>","tags":"Pi,Raspberry Pi,Node-Red","slug":"node-red-twitter-bot"}},{"node":{"id":"7ea3e51e-23b2-53e3-a639-2beb792fbcec","title":"Fold For Covid","coverImage":"https://pilab.dev/bl-content/uploads/pages/f7a9f3c988752b64b891403e01748dde/BOINC.png","permalink":"https://pilab.dev/fold-for-covid","content":"<p>I have upgraded the BOINC Node to a <a href=\"https://deviwiki.com/wiki/RPF_Raspberry_Pi_4_Model_B_2GB\">Raspberry Pi 4 Model B (2GB)</a>. This is a nice upgrade from the old <a href=\"https://deviwiki.com/wiki/RPF_Raspberry_Pi_Model_B_(256MB)\">Raspberry Pi Model B (256MB)</a> that I had previously been running.</p>\n<p>I have kept <a href=\"https://setiathome.berkeley.edu/\">SETI@home</a> setup just in case it starts sending out jobs again. However, the primary purpose of the BOINC node for now is to run <a href=\"https://boinc.bakerlab.org/\">Rosetta@home</a> to help with COVID-19 research.</p>\n<h5>Checkout Pi Lab's BOINC Node progress.</h5>\n<iframe width=\"100%\" height=\"360\" data-src=\"boincpi\" frameborder=\"0\" class=\"iframe-no-border-no-padding-no-isolate lozad\" scrolling=\"no\"></iframe>\n<hr />\n<p>Here are the basic steps that I used to setup <a href=\"https://boinc.bakerlab.org/\">Rosetta@home</a> on the BOINC node.</p>\n<h3>Step 1:</h3>\n<p>Download <a href=\"https://ubuntu.com/download/raspberry-pi\">Ubuntu Server for Raspberry Pi (64-bit)</a></p>\n<h3>Step 2:</h3>\n<p>Flash image to SD card</p>\n<p>The easiest way to do this is to use <a href=\"https://www.balena.io/etcher/\">balenaEtcher</a>. It is super simple and they have great instructions.</p>\n<h3>Step 3:</h3>\n<p>SSH into the Pi</p>\n<pre><code>ssh ubuntu@&lt;the_ip_assigned_to_the_pi&gt;</code></pre>\n<p><strong><em>Note:</em></strong>\n<em>The default password is <code>ubuntu</code>. You will be prompted to change it.</em></p>\n<h3>Step 4:</h3>\n<p>Make sure everything is up to date</p>\n<pre><code>sudo apt-get update\nsudo apt-get upgrade</code></pre>\n<h3>Step 5:</h3>\n<p>Install the BOINC Client</p>\n<pre><code>sudo apt-get install boinc-client</code></pre>\n<h3>Step 6:</h3>\n<p>Get Account Key</p>\n<pre><code>boinccmd --lookup_account boinccmd --lookup_account https://boinc.bakerlab.org/rosetta &lt;your_email&gt; &lt;your_password&gt;</code></pre>\n<p><strong><em>Note:</em></strong>\n<em>I already had a <a href=\"https://boinc.bakerlab.org/\">Rosetta@home</a> account. If you don't have one you can create one <a href=\"https://boinc.bakerlab.org/rosetta/create_account_form.php\">here</a>.</em></p>\n<h3>Step 7:</h3>\n<p>Attach the BOINC Client program to your <a href=\"https://boinc.bakerlab.org/\">Rosetta@home</a> account</p>\n<pre><code>boinccmd --project_attach https://boinc.bakerlab.org/rosetta &lt;your_account_key&gt;</code></pre>\n<h4>That's it. You should now be up and running!</h4>\n<hr />\n<p>Consider joining the <a href=\"https://boinc.bakerlab.org/rosetta/team_display.php?teamid=18832\">Fold for Covid</a> team.</p>\n<p><strong><em>Note:</em></strong> <em>There is a simpler setup available at <a href=\"https://foldforcovid.io/#get-started\">Fold for Covid</a>. I decided to go with this setup since I am very familiar with Ubuntu.</em></p>\n<hr />\n<h3>Do more with BOINC:</h3>\n<h4>Check your tasks:</h4>\n<pre><code>boinccmd --get_tasks</code></pre>\n<h4>Install boinctui:</h4>\n<pre><code>sudo apt-get install boinctui</code></pre>\n<h4>Run boinctui:</h4>\n<p>This will give you a nice text interface for BOINC.</p>\n<pre><code>boinctui</code></pre>\n<h4>Configure BOINC Client:</h4>\n<pre><code>sudo nano /var/lib/boinc-client/cc_config.xml</code></pre>\n<p><strong><em>Note:</em></strong> <em>If you make changes to the configuration be sure to run the following command. Configuration options can be found <a href=\"https://boinc.berkeley.edu/wiki/Client_configuration\">here</a>. </em></p>\n<pre><code>boinccmd --read_cc_config</code></pre>","tags":"Pi,Raspberry Pi","slug":"fold-for-covid"}}]}},"pageContext":{}},"staticQueryHashes":[]}